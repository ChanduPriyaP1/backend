pipeline {
    agent {
        label 'AGENT-1'
    }
    options {
        // Timeout counter starts AFTER agent is allocated
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    environment { 
      def appVersion = '' // Variable Declaration
    }

    stages {
        stage('npm install') {
            steps {
                sh """
                    npm install
                    ls -ltr
                """
            }
        }
        stage('Read Version') {
            steps {
                script {
                    def packageJson = readJSON file: 'package.json'
                    appVersion = packageJson.version
                    echo 'Application Version is : $appVersion'
                }
            }
        }
        

     post { 
        always { 
            echo 'I will always say Hello again!'
        }
        success { 
            echo 'I will always say Hello again!'
        }
    }
}